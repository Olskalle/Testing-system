<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>